# Boilerplate Rails RESTful JSON API

This API is implemented according to the [JSON API spec v1.1](https://jsonapi.org/format/1.1/)

## Filtering
**Description:** JSON API filtering with `all_filters` as default matcher.

**URI example:** `GET /users?filter[email-eq]=user@email.com&filter[name-cont]=son&match=any_filters`

## Sorting
**Description:** JSON API sorting.

**URI example:** `GET /users?sort=name,-age`

## Inclusion
**Description:** JSON API inclusion of related resources. Dot-separated relationship path supporting not implemented at this time.

**URI example:** `GET /users?include=team,organization`

## Pagination
**Description:** JSON API pagination with offset strategy.

**URI example:** `GET /users?page[number]=1&page[size]=1`

# Group Profile


## Profiles [/users/account/profile]


### Show user profile [GET /api/v1/users/account/profile]

+ Parameters
    + include: `account` (string, optional) - User profile inclusion

+ Request renders user profile
**GET**&nbsp;&nbsp;`/api/v1/users/account/profile?include=account`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
            Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3NzM0NDIsImFjY291bnRfaWQiOjc1MDgsIm5hbWVzcGFjZSI6bnVsbCwidWlkIjoiMTZmOGQ3NGQtZGJmZi00MTdjLTg0ZTktMjlmYWI2ODQ4MWJhIiwiZXhwIjoxNTY3NzczNDQyfQ.zO9XqJNeJ9Nr946uSzX_5t2SbUXN0_a87kcBUh_Wx0Y

+ Response 200

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "data": {
                "id": "1400",
                "type": "user-profile",
                "attributes": {
                  "name": "Teofila Klocko"
                },
                "relationships": {
                  "account": {
                    "data": {
                      "id": "7508",
                      "type": "account"
                    }
                  }
                }
              },
              "included": [
                {
                  "id": "7508",
                  "type": "account",
                  "attributes": {
                    "email": "hien_nitzsche@prosacco.ca",
                    "created_at": "2019-09-06T11:37:22.882Z"
                  }
                }
              ]
            }

+ Request renders auth errors
**GET**&nbsp;&nbsp;`/api/v1/users/account/profile`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

+ Response 401

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/base"
                  },
                  "detail": "invalid_token"
                }
              ]
            }

+ Request renders uri query errors
**GET**&nbsp;&nbsp;`/api/v1/users/account/profile?include=not_valid_include`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
            Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3NzM0NDIsImFjY291bnRfaWQiOjc1MTIsIm5hbWVzcGFjZSI6bnVsbCwidWlkIjoiYTI2OGFjYTUtZGJkNy00MzJlLTgyNGEtNWY5YmE1YTZiYWI3IiwiZXhwIjoxNTY3NzczNDQyfQ.61PigOL1SYzFhalpUesT9nvjyW9nwkcH911VgrseSRg

+ Response 400

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "include"
                  },
                  "detail": "can't include such association"
                }
              ]
            }

# Group Registration


## Registrations [/users/registration]


### Create user account (Sign Up) [POST /api/v1/users/registration]

+ Parameters
    + email: `lane_runolfsdottir%40lemkerath.ca` (string, required) - Email for user account
    + password: `password` (string, required) - Password for user account
    + password_confirmation: `password` (string, required) - Password confirmation for user account

+ Request renders user whose account was created
**POST**&nbsp;&nbsp;`/api/v1/users/registration`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email": "taina.tromp@gulgowski.us",
              "password": "Password1!",
              "password_confirmation": "Password1!"
            }

+ Response 201

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "data": {
                "id": "7513",
                "type": "account",
                "attributes": {
                  "email": "taina.tromp@gulgowski.us",
                  "created_at": "2019-09-06T11:37:23.031Z"
                }
              }
            }

+ Request renders resource errors
**POST**&nbsp;&nbsp;`/api/v1/users/registration`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body



+ Response 422

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/email"
                  },
                  "detail": "must be filled"
                },
                {
                  "source": {
                    "pointer": "/password"
                  },
                  "detail": "must be filled"
                }
              ]
            }

# Group ResetPassword


## ResetPasswords [/users/reset_password]


### Create user account reset password token [POST /api/v1/users/reset_password]

+ Parameters
    + email: `meaghan%40feestcrist.biz` (string, required) - Email of existing user account

+ Request returns accepted status
**POST**&nbsp;&nbsp;`/api/v1/users/reset_password`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email": "sophia@brakus.info"
            }

+ Response 202

    + Headers

            Content-Type: application/json

+ Request renders resource errors
**POST**&nbsp;&nbsp;`/api/v1/users/reset_password`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body



+ Response 422

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/email"
                  },
                  "detail": "is missing"
                }
              ]
            }

+ Request returns not found status
**POST**&nbsp;&nbsp;`/api/v1/users/reset_password`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email": "_sima_lehner@blockwitting.biz"
            }

+ Response 404

    + Headers

            Content-Type: application/json

### Verify user account reset password token [GET /api/v1/users/reset_password]

+ Parameters
    + email_token: `valid.jwt.token` (string, required) - Valid and existing JWT email reset password token

+ Request verifies user account
**GET**&nbsp;&nbsp;`/api/v1/users/reset_password?email_token=eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50X2lkIjo3NTE3LCJuYW1lc3BhY2UiOiJyZXNldC1wYXNzd29yZCIsImV4cCI6MTU2Nzg1NjI0M30.JvoTvTFlQjtAEHHqPV0yvuHY4UBeogqTAc0pp49KNTI`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

+ Response 204

+ Request renders resource errors
**GET**&nbsp;&nbsp;`/api/v1/users/reset_password?email_token=invalid_token`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

+ Response 422

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/base"
                  },
                  "detail": "invalid email token"
                }
              ]
            }

+ Request returns not found status
**GET**&nbsp;&nbsp;`/api/v1/users/reset_password?email_token=eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50X2lkIjo3NTIwLCJuYW1lc3BhY2UiOm51bGwsImV4cCI6MTU2Nzg1NjI0M30.SjpeITLaFLZiNnChFhc1GPbKJw5eiFgFzBkCk-Fj5Gs`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

+ Response 404

    + Headers

            Content-Type: text/html

### Update user account password [PUT /api/v1/users/reset_password]

+ Parameters
    + email_token: `valid.jwt.token` (string, required) - Valid and existing JWT email reset password token
    + password: `password` (string, required) - New password for user account
    + password_confirmation: `password` (string, required) - Password confirmation for user account

+ Request updates user account password
**PUT**&nbsp;&nbsp;`/api/v1/users/reset_password`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email_token": "eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50X2lkIjo3NTIwLCJuYW1lc3BhY2UiOiJyZXNldC1wYXNzd29yZCIsImV4cCI6MTU2Nzg1NjI0M30.43k-0jafKXB9XoOnteAxNpCLnSylAaW5zJm0f69clkU",
              "password": "Password1!",
              "password_confirmation": "Password1!"
            }

+ Response 204

+ Request renders resource errors
**PUT**&nbsp;&nbsp;`/api/v1/users/reset_password`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email_token": "eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50X2lkIjo3NTIxLCJuYW1lc3BhY2UiOiJyZXNldC1wYXNzd29yZCIsImV4cCI6MTU2Nzg1NjI0M30.CwewaxT_siD4eM4qSwg1nIR9k4aRv0ruAA47Er5Msvs",
              "password": "Password1!",
              "password_confirmation": "Password1!_"
            }

+ Response 422

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/password_confirmation"
                  },
                  "detail": "should match to password"
                }
              ]
            }

# Group Session


## Session Refresh [/users/session/refresh]


### Refresh user session [POST /api/v1/users/session/refresh]


+ Request renders refreshed tokens bundle in meta
**POST**&nbsp;&nbsp;`/api/v1/users/session/refresh`

    + Headers

            Accept: application/json
            X-Refresh-Token: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3Njk4NDMsInVpZCI6IjI3NzMyMWMwLTRmZDEtNDk3Mi1iNDkwLWMyYmI3MmUzNDI5NSIsImV4cCI6MTU2ODM3NDY0M30.EVzxjZUCG5CEYkBWbqsAzKjwGJNHzuccY4RE-su0n1s
            Content-Type: application/json

+ Response 201

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "data": null,
              "meta": {
                "csrf": "TcQ+w/c7OktemqhFiSR0fosUagyubg5/MCzLX0iIlLyACWwmmnQ4M/HDiYoCifuT+/WvCNFMF7qUh7txzywfUQ==",
                "access": "eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3Njk4NDMsImV4cCI6MTU2Nzc2OTg0MywidWlkIjoiMWQ5OTY4YjgtMWIwYy00ODRjLWIwMmYtZGQzZjI5YzQ2NTVlIn0.NZYNnPdHe7b29cbOQK8zuQnn9TVAaJ1nuZy7vu8JM_I",
                "access_expires_at": "2019-09-06T14:37:23.000+03:00"
              }
            }

+ Request renders auth errors
**POST**&nbsp;&nbsp;`/api/v1/users/session/refresh`

    + Headers

            Accept: application/json
            Content-Type: application/json

+ Response 401

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/base"
                  },
                  "detail": "invalid_token"
                }
              ]
            }

+ Request returns forbidden status
**POST**&nbsp;&nbsp;`/api/v1/users/session/refresh`

    + Headers

            Accept: application/json
            X-Refresh-Token: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3NzM0NDMsInVpZCI6IjNhNDM3M2VjLTA1MmMtNDcxNi04ZWE1LTVkMmNjOGE5YmJmZiIsImV4cCI6MTU2ODM3NDY0M30.LERUTBFLyC5kyX92q8kM0-HGku13jlzbWEPLa1RrMfY
            Content-Type: application/json

+ Response 403

    + Headers

            Content-Type: application/json

## Sessions [/users/session]


### Create user session (Sign In) [POST /api/v1/users/session]

+ Parameters
    + email: `kenyetta.jaskolski%40gibson.us` (string, required) - Email of existing user account
    + password: `password` (string, required) - Password for this user account

+ Request renders user whose session was created
**POST**&nbsp;&nbsp;`/api/v1/users/session`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email": "sherita@gulgowskiokon.biz",
              "password": "qnfsccKiF"
            }

+ Response 201

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "data": {
                "id": "7524",
                "type": "account",
                "attributes": {
                  "email": "sherita@gulgowskiokon.biz",
                  "created_at": "2019-09-06T11:37:23.271Z"
                }
              },
              "meta": {
                "csrf": "ICXEReyL9bihINGh+kQQR3kRADhC4oNYTlOcl13ilyt8tKxg8RyxZZjOKwsT4VPFF37e0eeCBdIPKR3pf9cUmw==",
                "access": "eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3NzM0NDMsImFjY291bnRfaWQiOjc1MjQsIm5hbWVzcGFjZSI6InVzZXItYWNjb3VudC03NTI0IiwidWlkIjoiYjkxMTRjZDMtNmViZC00MWQ4LWJiNzYtMGFiNjBmY2YyZDc3IiwiZXhwIjoxNTY3NzczNDQzfQ.oIziZprKrtYQiil3p_IQuzM3G1X3bIj8UR4mJauG-Kw",
                "access_expires_at": "2019-09-06T15:37:23.000+03:00",
                "refresh": "eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3NzM0NDMsInVpZCI6IjI2NzNjZjllLTBkNmYtNDY1Ny1iZjliLTZjYjExZjBmN2E5MSIsImV4cCI6MTU2ODM3NDY0M30.-gpaeap0fwxkG5tKZZSNugIeAqG1ts2S87GGN8Sk-do",
                "refresh_expires_at": "2019-09-13T14:37:23.000+03:00"
              }
            }

+ Request renders resource errors
**POST**&nbsp;&nbsp;`/api/v1/users/session`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body



+ Response 422

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/email"
                  },
                  "detail": "is missing"
                },
                {
                  "source": {
                    "pointer": "/password"
                  },
                  "detail": "is missing"
                }
              ]
            }

+ Request returns not found status
**POST**&nbsp;&nbsp;`/api/v1/users/session`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email": "_nannie.hoeger@handsenger.us",
              "password": "ai8N3sItnlgudEc"
            }

+ Response 404

    + Headers

            Content-Type: application/json

+ Request renders auth errors
**POST**&nbsp;&nbsp;`/api/v1/users/session`

    + Headers

            Accept: application/json
            Content-Type: application/json

    + Body

            {
              "email": "sabra@schulist.us",
              "password": "_rYYZUp5Z"
            }

+ Response 401

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/base"
                  },
                  "detail": "wrong credentials"
                }
              ]
            }

### Destroy user session (Sign Out) [DELETE /api/v1/users/session]


+ Request clears user session
**DELETE**&nbsp;&nbsp;`/api/v1/users/session`

    + Headers

            Accept: application/json
            X-Refresh-Token: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1Njc3NzM0NDMsInVpZCI6Ijc4MWY5MDVjLTZmZjEtNDAyMi1hZmY4LWRmMTI1NzBjZjg3MiIsImV4cCI6MTU2ODM3NDY0M30.adfkeji3kmeGK4IqO3r3os9O01Rw7sHcsAT8DBQBup0
            Content-Type: application/json

+ Response 204

+ Request renders auth errors
**DELETE**&nbsp;&nbsp;`/api/v1/users/session`

    + Headers

            Accept: application/json
            Content-Type: application/json

+ Response 401

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/base"
                  },
                  "detail": "invalid_token"
                }
              ]
            }

# Group Verification


## Verifications [/users/verification]


### Verificate user account [GET /api/v1/users/verification]

+ Parameters
    + email_token: `` (string, required)

+ Request verifies user account
**GET**&nbsp;&nbsp;`/api/v1/users/verification?email_token=eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50X2lkIjo3NTI4LCJuYW1lc3BhY2UiOm51bGwsImV4cCI6MTU2Nzg1NjI0M30.iecenIBI9afFL0WFMcksWhCo4ejFZRfJ3XM_Tc_GSzc`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

+ Response 204

+ Request renders resource errors
**GET**&nbsp;&nbsp;`/api/v1/users/verification?email_token=invalid_token`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

+ Response 422

    + Headers

            Content-Type: application/vnd.api+json; charset=utf-8

    + Body

            {
              "errors": [
                {
                  "source": {
                    "pointer": "/base"
                  },
                  "detail": "invalid email token"
                }
              ]
            }

+ Request returns not found status
**GET**&nbsp;&nbsp;`/api/v1/users/verification?email_token=eyJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50X2lkIjo3NTMwLCJuYW1lc3BhY2UiOm51bGwsImV4cCI6MTU2Nzg1NjI0M30.L2CSDBGSxTKnwSnJ8hD0UgU6o-rIDOdINRCNY-67GMk`

    + Headers

            Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5

+ Response 404

    + Headers

            Content-Type: text/html
